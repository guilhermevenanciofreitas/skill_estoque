{"version":3,"sources":["service/index.js","views/cadastros/produto.js","views/relatorios/produto.js","views/relatorios/local.js","app.js","index.js"],"names":["Service","constructor","Post","async","url","data","headers","config","authorization","JSON","parse","localStorage","getItem","token","response","axios","post","lastAcess","expireIn","parseInt","setItem","stringify","error","_error$response","_error$response2","_error$response3","code","Error","status","message","removeItem","window","location","hash","slice","href","ProdutoList","selectedProductId","setSelectedProductId","useState","produtos","setProdutos","loading","setLoading","scrollViewRef","useRef","fetchData","_result$data","_result$data$response","result","rows","alert","useEffect","_jsxs","View","style","styles","container","children","_jsx","TouchableOpacity","refreshButton","onPress","disabled","Text","refreshButtonText","ScrollView","ref","flex","refreshControl","RefreshControl","refreshing","onRefresh","onScroll","event","nativeEvent","contentOffset","y","scrollEventThrottle","FlatList","renderItem","_ref","item","isSelected","codprod","itemContainer","itemHeader","productInfo","descricao","sublist","estoques","map","local","index","_local$local","sublistItem","length","sublistItemWithBorder","sublistRow","sublistInfo","saldo","toFixed","replace","keyExtractor","_item$id","id","toString","StyleSheet","create","padding","backgroundColor","borderRadius","alignItems","marginBottom","color","fontWeight","borderWidth","borderColor","flexDirection","justifyContent","marginTop","paddingLeft","paddingVertical","borderBottomWidth","borderBottomColor","RelatorioProdutoList","saldo_total","RelatorioLocalList","locais","setLocais","codloc","_local$produto","_local$produto2","produto","overlay","position","top","left","right","bottom","zIndex","overlayVisible","drawer","width","paddingTop","borderRightWidth","borderRightColor","shadowColor","shadowOpacity","shadowRadius","shadowOffset","height","drawerContent","paddingHorizontal","menuItem","menuText","fontSize","subMenu","subMenuItem","subMenuText","mainContent","header","menuButton","marginRight","title","body","bodyText","App","isDrawerOpen","setIsDrawerOpen","drawerAnimation","Animated","Value","selectedScreen","setSelectedScreen","cadastrosExpanded","setCadastrosExpanded","relatoriosExpanded","setRelatoriosExpanded","toggleDrawer","timing","toValue","duration","useNativeDriver","start","handleMenuItemClick","screen","SafeAreaView","TouchableWithoutFeedback","handleOutsidePress","transform","translateX","toggleCadastros","toggleRelatorios","renderContent","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.4eeb81b3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport class Service {\n\n    Post = async (url, data, headers) => {\n\n        const env = 'http://vps53636.publiccloud.com.br:1000/api/'\n\n        let config = {};\n\n        let authorization = JSON.parse(localStorage.getItem('Authorization'))\n\n        try {\n\n            if (authorization) {\n                config = {\n                    headers: {\n                        'Authorization': `${authorization?.token}`,\n                        ...headers\n                    },\n                }\n            }\n\n            var response = await axios.post(env + url, data || {}, config)\n\n            if (authorization) {\n                authorization.lastAcess = response.headers['last-acess']\n                authorization.expireIn = parseInt(response.headers['expire-in'])\n                localStorage.setItem('Authorization', JSON.stringify(authorization))\n            }\n\n            return response\n\n        } catch (error) {\n\n            //API fora do ar\n            if (error.code == 'ERR_NETWORK') {\n                const message = '[300] - Servidor fora do ar!'\n                //Swal.fire({showCloseButton: true, title: 'Ops...', icon: 'error', text: message})\n                throw new Error(message)\n            }\n\n            //Em manutenção\n            if (error?.response?.status == 301) {\n                const message = '[301] - Servidor em manutenção, aguarde um instante!'\n                //Swal.fire({showCloseButton: true, title: 'Ops...', icon: 'warning', text: message, confirmButtonColor: \"#FFF\", confirmButtonText: 'Aguarde um instante'})\n                throw new Error(message)\n            }\n\n            //Sessão expirada\n            if (error?.response?.status == 400) {\n                const message = error.response.data.message\n                localStorage.removeItem('Authorization')\n                const to = window.location.hash.slice(1)\n                window.location.href = `/sign-in`\n                throw new Error(message)\n            }\n\n            //Erro desconhecido\n            const message = '[500] - Ocorreu um erro inesperado!'\n            /*\n            Swal.fire({showCloseButton: true, title: 'Ops...', icon: 'error', text: message, confirmButtonColor: \"#FFF\", confirmButtonText: '<span style=\"color: rgba(88, 86, 214)\">Quero abrir um chamado!</span>',\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    Swal.fire('', 'Chamado <b>#49812</b> aberto com sucesso!', 'success')\n                }\n            })\n            */\n            throw new Error(JSON.stringify(error?.response?.data))\n\n        }\n    }\n\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { \r\n  View, Text, TouchableOpacity, FlatList, StyleSheet, ScrollView, RefreshControl\r\n} from 'react-native';\r\nimport { Service } from '../../service';\r\n\r\nexport const ProdutoList = () => {\r\n  const [selectedProductId, setSelectedProductId] = useState(null);\r\n  const [produtos, setProdutos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const scrollViewRef = useRef(null);\r\n\r\n  // Função para buscar os dados\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await new Service().Post('cadastros/produto/lista');\r\n      setProdutos(result.data?.response?.rows || []);\r\n    } catch (error) {\r\n      alert('Erro ao carregar os dados: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Função para detectar scroll no navegador\r\n  const handleScroll = (event) => {\r\n    if (event.nativeEvent.contentOffset.y <= 0 && !loading) {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item }) => {\r\n    const isSelected = selectedProductId === item.codprod;\r\n\r\n    return (\r\n      <View style={styles.itemContainer}>\r\n        <TouchableOpacity onPress={() => setSelectedProductId(isSelected ? null : item.codprod)}>\r\n          <View style={styles.itemHeader}>\r\n            <View style={styles.productInfo}>\r\n              <Text>{item.codprod} - {item.descricao}</Text>\r\n            </View>\r\n            {/*<Text style={styles.saldo}>Saldo: {item.saldo_total.toFixed(2).replace('.', ',')}</Text>*/}\r\n          </View>\r\n        </TouchableOpacity>\r\n\r\n        {isSelected && (\r\n          <View style={styles.sublist}>\r\n            {item.estoques.map((local, index) => (\r\n              <View key={index} style={[styles.sublistItem, index !== item.estoques.length - 1 && styles.sublistItemWithBorder]}>\r\n                <View style={styles.sublistRow}>\r\n                  <View style={styles.sublistInfo}>\r\n                    <Text>{local.local?.descricao}</Text>\r\n                  </View>\r\n                  <Text>{local.saldo.toFixed(2).replace('.', ',')}</Text>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Botão de Recarregar */}\r\n      <TouchableOpacity style={styles.refreshButton} onPress={fetchData} disabled={loading}>\r\n        <Text style={styles.refreshButtonText}>{loading ? 'Atualizando...' : 'Recarregar'}</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* ScrollView para Navegador */}\r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        style={{ flex: 1 }}\r\n        refreshControl={\r\n          <RefreshControl refreshing={loading} onRefresh={fetchData} />\r\n        }\r\n        onScroll={handleScroll}\r\n        scrollEventThrottle={16}\r\n      >\r\n        <FlatList\r\n          data={produtos}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item) => item.id?.toString()}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  refreshButton: {\r\n    backgroundColor: '#6200EE',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  refreshButtonText: {\r\n    color: '#FFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  itemContainer: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 10,\r\n  },\r\n  itemHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n  },\r\n  productInfo: {\r\n    flexDirection: 'column',\r\n  },\r\n  saldo: {\r\n    fontWeight: 'bold',\r\n  },\r\n  sublist: {\r\n    marginTop: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  sublistItem: {\r\n    paddingVertical: 10,\r\n  },\r\n  sublistItemWithBorder: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  sublistRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  sublistInfo: {\r\n    flexDirection: 'column',\r\n  },\r\n});","import React, { useEffect, useState, useRef } from 'react';\r\nimport { \r\n  View, Text, TouchableOpacity, FlatList, StyleSheet, ScrollView, RefreshControl\r\n} from 'react-native';\r\nimport { Service } from '../../service';\r\n\r\nexport const RelatorioProdutoList = () => {\r\n  const [selectedProductId, setSelectedProductId] = useState(null);\r\n  const [produtos, setProdutos] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const scrollViewRef = useRef(null);\r\n\r\n  // Função para buscar os dados\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await new Service().Post('relatorios/produto/lista');\r\n      setProdutos(result.data?.response?.rows || []);\r\n    } catch (error) {\r\n      alert('Erro ao carregar os dados: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Função para detectar scroll no navegador\r\n  const handleScroll = (event) => {\r\n    if (event.nativeEvent.contentOffset.y <= 0 && !loading) {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item }) => {\r\n    const isSelected = selectedProductId === item.codprod;\r\n\r\n    return (\r\n      <View style={styles.itemContainer}>\r\n        <TouchableOpacity onPress={() => setSelectedProductId(isSelected ? null : item.codprod)}>\r\n          <View style={styles.itemHeader}>\r\n            <View style={styles.productInfo}>\r\n              <Text>{item.codprod} - {item.descricao}</Text>\r\n            </View>\r\n            <Text style={styles.saldo}>Saldo: {item.saldo_total.toFixed(2).replace('.', ',')}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n\r\n        {isSelected && (\r\n          <View style={styles.sublist}>\r\n            {item.estoques.map((local, index) => (\r\n              <View key={index} style={[styles.sublistItem, index !== item.estoques.length - 1 && styles.sublistItemWithBorder]}>\r\n                <View style={styles.sublistRow}>\r\n                  <View style={styles.sublistInfo}>\r\n                    <Text>{local.local?.descricao}</Text>\r\n                  </View>\r\n                  <Text>{local.saldo.toFixed(2).replace('.', ',')}</Text>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Botão de Recarregar */}\r\n      <TouchableOpacity style={styles.refreshButton} onPress={fetchData} disabled={loading}>\r\n        <Text style={styles.refreshButtonText}>{loading ? 'Atualizando...' : 'Recarregar'}</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* ScrollView para Navegador */}\r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        style={{ flex: 1 }}\r\n        refreshControl={\r\n          <RefreshControl refreshing={loading} onRefresh={fetchData} />\r\n        }\r\n        onScroll={handleScroll}\r\n        scrollEventThrottle={16}\r\n      >\r\n        <FlatList\r\n          data={produtos}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item) => item.id?.toString()}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  refreshButton: {\r\n    backgroundColor: '#6200EE',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  refreshButtonText: {\r\n    color: '#FFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  itemContainer: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 10,\r\n  },\r\n  itemHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n  },\r\n  productInfo: {\r\n    flexDirection: 'column',\r\n  },\r\n  saldo: {\r\n    fontWeight: 'bold',\r\n  },\r\n  sublist: {\r\n    marginTop: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  sublistItem: {\r\n    paddingVertical: 10,\r\n  },\r\n  sublistItemWithBorder: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  sublistRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  sublistInfo: {\r\n    flexDirection: 'column',\r\n  },\r\n});","import React, { useEffect, useState, useRef } from 'react';\r\nimport { \r\n  View, Text, TouchableOpacity, FlatList, StyleSheet, ScrollView, RefreshControl\r\n} from 'react-native';\r\nimport { Service } from '../../service';\r\n\r\nexport const RelatorioLocalList = () => {\r\n  const [selectedProductId, setSelectedProductId] = useState(null);\r\n  const [locais, setLocais] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const scrollViewRef = useRef(null);\r\n\r\n  // Função para buscar os dados\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await new Service().Post('relatorios/local/lista');\r\n      setLocais(result.data?.response?.rows || []);\r\n    } catch (error) {\r\n      alert('Erro ao carregar os dados: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Função para detectar scroll no navegador\r\n  const handleScroll = (event) => {\r\n    if (event.nativeEvent.contentOffset.y <= 0 && !loading) {\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item }) => {\r\n    const isSelected = selectedProductId === item.codloc;\r\n\r\n    return (\r\n      <View style={styles.itemContainer}>\r\n        <TouchableOpacity onPress={() => setSelectedProductId(isSelected ? null : item.codloc)}>\r\n          <View style={styles.itemHeader}>\r\n            <View style={styles.productInfo}>\r\n              <Text>{item.codloc} - {item.descricao}</Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n\r\n        {isSelected && (\r\n          <View style={styles.sublist}>\r\n            {item.estoques.map((local, index) => (\r\n              <View key={index} style={[styles.sublistItem, index !== item.estoques.length - 1 && styles.sublistItemWithBorder]}>\r\n                <View style={styles.sublistRow}>\r\n                  <View style={styles.sublistInfo}>\r\n                    <Text>{local.produto?.codprod} - {local.produto?.descricao}</Text>\r\n                  </View>\r\n                  <Text>{local.saldo.toFixed(2).replace('.', ',')}</Text>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Botão de Recarregar */}\r\n      <TouchableOpacity style={styles.refreshButton} onPress={fetchData} disabled={loading}>\r\n        <Text style={styles.refreshButtonText}>{loading ? 'Atualizando...' : 'Recarregar'}</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* ScrollView para Navegador */}\r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        style={{ flex: 1 }}\r\n        refreshControl={\r\n          <RefreshControl refreshing={loading} onRefresh={fetchData} />\r\n        }\r\n        onScroll={handleScroll}\r\n        scrollEventThrottle={16}\r\n      >\r\n        <FlatList\r\n          data={locais}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item) => item.id?.toString()}\r\n        />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  refreshButton: {\r\n    backgroundColor: '#6200EE',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  refreshButtonText: {\r\n    color: '#FFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  itemContainer: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 10,\r\n  },\r\n  itemHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n  },\r\n  productInfo: {\r\n    flexDirection: 'column',\r\n  },\r\n  saldo: {\r\n    fontWeight: 'bold',\r\n  },\r\n  sublist: {\r\n    marginTop: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  sublistItem: {\r\n    paddingVertical: 10,\r\n  },\r\n  sublistItemWithBorder: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  sublistRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  sublistInfo: {\r\n    flexDirection: 'column',\r\n  },\r\n});","import React, { useState } from 'react';\r\nimport { \r\n  View, Text, TouchableOpacity, TouchableWithoutFeedback, StyleSheet, Animated, SafeAreaView \r\n} from 'react-native';\r\n\r\nimport { ProdutoList } from './views/cadastros/produto';\r\n\r\nimport { RelatorioProdutoList } from './views/relatorios/produto';\r\nimport { RelatorioLocalList } from './views/relatorios/local';\r\n\r\nconst App = () => {\r\n\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [drawerAnimation] = useState(new Animated.Value(-300));\r\n  const [selectedScreen, setSelectedScreen] = useState('Produtos');\r\n\r\n  const [cadastrosExpanded, setCadastrosExpanded] = useState(false);\r\n  const [relatoriosExpanded, setRelatoriosExpanded] = useState(false);\r\n\r\n  const toggleDrawer = () => {\r\n    Animated.timing(drawerAnimation, {\r\n      toValue: isDrawerOpen ? -300 : 0,\r\n      duration: 250,\r\n      useNativeDriver: true,\r\n    }).start();\r\n\r\n    setIsDrawerOpen(!isDrawerOpen);\r\n  };\r\n\r\n  const handleOutsidePress = () => {\r\n    if (isDrawerOpen) {\r\n      toggleDrawer();\r\n    }\r\n  };\r\n\r\n  const handleMenuItemClick = (screen) => {\r\n    setSelectedScreen(screen);\r\n    toggleDrawer();\r\n  };\r\n\r\n  const toggleCadastros = () => {\r\n    setCadastrosExpanded(!cadastrosExpanded);\r\n  };\r\n\r\n  const toggleRelatorios = () => {\r\n    setRelatoriosExpanded(!relatoriosExpanded);\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (selectedScreen) {\r\n      case \"Produtos\":\r\n        return <ProdutoList />;\r\n      case \"Produto\":\r\n        return <RelatorioProdutoList />;\r\n      case \"Local\":\r\n        return <RelatorioLocalList />;\r\n      default:\r\n        return <Text style={styles.bodyText}>Conteúdo de {selectedScreen}</Text>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <TouchableWithoutFeedback onPress={handleOutsidePress}>\r\n        <View style={[styles.overlay, isDrawerOpen && styles.overlayVisible]} />\r\n      </TouchableWithoutFeedback>\r\n\r\n      <Animated.View style={[styles.drawer, { transform: [{ translateX: drawerAnimation }] }]}>\r\n        <View style={styles.drawerContent}>\r\n          \r\n          {/* Cadastros */}\r\n          <TouchableOpacity onPress={toggleCadastros} style={styles.menuItem}>\r\n            <Text style={styles.menuText}>{cadastrosExpanded ? \"🔽\" : \"➡\"} Cadastros</Text>\r\n          </TouchableOpacity>\r\n          {cadastrosExpanded && (\r\n            <View style={styles.subMenu}>\r\n              <TouchableOpacity onPress={() => handleMenuItemClick('Produtos')} style={styles.subMenuItem}>\r\n                <Text style={styles.subMenuText}>📦 Produtos</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n\r\n          {/* Relatórios */}\r\n          <TouchableOpacity onPress={toggleRelatorios} style={styles.menuItem}>\r\n            <Text style={styles.menuText}>{relatoriosExpanded ? \"🔽\" : \"➡\"} Relatórios</Text>\r\n          </TouchableOpacity>\r\n          {relatoriosExpanded && (\r\n            <View style={styles.subMenu}>\r\n              <TouchableOpacity onPress={() => handleMenuItemClick('Produto')} style={styles.subMenuItem}>\r\n                <Text style={styles.subMenuText}>📊 Produtos</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={() => handleMenuItemClick('Local')} style={styles.subMenuItem}>\r\n                <Text style={styles.subMenuText}>📍 Locais</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </Animated.View>\r\n\r\n      {/* Conteúdo Principal */}\r\n      <View style={styles.mainContent}>\r\n        <View style={styles.header}>\r\n          <TouchableOpacity onPress={toggleDrawer}>\r\n            <Text style={styles.menuButton}>☰</Text>\r\n          </TouchableOpacity>\r\n          <Text style={styles.title}>{selectedScreen}</Text>\r\n        </View>\r\n        <View style={styles.body}>{renderContent()}</View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n    zIndex: 0,\r\n  },\r\n  overlayVisible: {\r\n    zIndex: 1,\r\n  },\r\n  drawer: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    width: 280,\r\n    backgroundColor: '#ffffff',\r\n    paddingTop: 50,\r\n    zIndex: 2,\r\n    borderRightWidth: 1,\r\n    borderRightColor: '#ddd',\r\n    shadowColor: '#000',\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 8,\r\n    shadowOffset: { width: 2, height: 2 },\r\n  },\r\n  drawerContent: {\r\n    paddingHorizontal: 20,\r\n  },\r\n  menuItem: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ddd',\r\n  },\r\n  menuText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  subMenu: {\r\n    backgroundColor: '#f5f5f5',\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    marginTop: 5,\r\n  },\r\n  subMenuItem: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ddd',\r\n  },\r\n  subMenuText: {\r\n    fontSize: 18,\r\n    color: '#555',\r\n  },\r\n  mainContent: {\r\n    flex: 1,\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ffffff',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#e0e0e0',\r\n  },\r\n  menuButton: {\r\n    fontSize: 32,\r\n    color: '#333',\r\n    marginRight: 15,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    color: '#333',\r\n    fontWeight: 'bold',\r\n  },\r\n  body: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  bodyText: {\r\n    fontSize: 18,\r\n    color: '#333',\r\n  },\r\n});\r\n\r\nexport default App;\r\n","import { AppRegistry } from \"react-native\";\r\nimport App from \"./app\";\r\n\r\nAppRegistry.registerComponent(\"App\", () => App);\r\n\r\nAppRegistry.runApplication(\"App\", {\r\n  rootTag: document.getElementById(\"root\")\r\n});\r\n"],"sourceRoot":""}